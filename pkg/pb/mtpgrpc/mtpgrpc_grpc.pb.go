// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.13.0
// source: mtpgrpc.proto

package mtpgrpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// MtpGrpcClient is the client API for MtpGrpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MtpGrpcClient interface {
	MtpGetParamReq(ctx context.Context, in *MtpGetParamReqData, opts ...grpc.CallOption) (*MtpReqResult, error)
	MtpSetParamReq(ctx context.Context, in *MtpSetParamReqData, opts ...grpc.CallOption) (*MtpSetParamResData, error)
	MtpGetInstancesReq(ctx context.Context, in *MtpGetInstancesReqData, opts ...grpc.CallOption) (*MtpReqResult, error)
	MtpAddInstanceReq(ctx context.Context, in *MtpAddInstanceReqData, opts ...grpc.CallOption) (*MtpAddInstanceResData, error)
	MtpOperateReq(ctx context.Context, in *MtpOperateReqData, opts ...grpc.CallOption) (*MtpOperateResData, error)
	MtpGetDatamodelReq(ctx context.Context, in *MtpGetDatamodelReqData, opts ...grpc.CallOption) (*MtpReqResult, error)
	MtpDeleteInstanceReq(ctx context.Context, in *MtpDeleteInstanceReqData, opts ...grpc.CallOption) (*MtpReqResult, error)
	MtpGetAgentMsgs(ctx context.Context, in *MtpGetAgentMsgsData, opts ...grpc.CallOption) (*MtpReqResult, error)
	MtpGetInfo(ctx context.Context, in *None, opts ...grpc.CallOption) (*MtpInfoData, error)
	MtpStream(ctx context.Context, in *MtpGetParamReqData, opts ...grpc.CallOption) (MtpGrpc_MtpStreamClient, error)
}

type mtpGrpcClient struct {
	cc grpc.ClientConnInterface
}

func NewMtpGrpcClient(cc grpc.ClientConnInterface) MtpGrpcClient {
	return &mtpGrpcClient{cc}
}

func (c *mtpGrpcClient) MtpGetParamReq(ctx context.Context, in *MtpGetParamReqData, opts ...grpc.CallOption) (*MtpReqResult, error) {
	out := new(MtpReqResult)
	err := c.cc.Invoke(ctx, "/mtpgrpc.MtpGrpc/MtpGetParamReq", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mtpGrpcClient) MtpSetParamReq(ctx context.Context, in *MtpSetParamReqData, opts ...grpc.CallOption) (*MtpSetParamResData, error) {
	out := new(MtpSetParamResData)
	err := c.cc.Invoke(ctx, "/mtpgrpc.MtpGrpc/MtpSetParamReq", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mtpGrpcClient) MtpGetInstancesReq(ctx context.Context, in *MtpGetInstancesReqData, opts ...grpc.CallOption) (*MtpReqResult, error) {
	out := new(MtpReqResult)
	err := c.cc.Invoke(ctx, "/mtpgrpc.MtpGrpc/MtpGetInstancesReq", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mtpGrpcClient) MtpAddInstanceReq(ctx context.Context, in *MtpAddInstanceReqData, opts ...grpc.CallOption) (*MtpAddInstanceResData, error) {
	out := new(MtpAddInstanceResData)
	err := c.cc.Invoke(ctx, "/mtpgrpc.MtpGrpc/MtpAddInstanceReq", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mtpGrpcClient) MtpOperateReq(ctx context.Context, in *MtpOperateReqData, opts ...grpc.CallOption) (*MtpOperateResData, error) {
	out := new(MtpOperateResData)
	err := c.cc.Invoke(ctx, "/mtpgrpc.MtpGrpc/MtpOperateReq", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mtpGrpcClient) MtpGetDatamodelReq(ctx context.Context, in *MtpGetDatamodelReqData, opts ...grpc.CallOption) (*MtpReqResult, error) {
	out := new(MtpReqResult)
	err := c.cc.Invoke(ctx, "/mtpgrpc.MtpGrpc/MtpGetDatamodelReq", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mtpGrpcClient) MtpDeleteInstanceReq(ctx context.Context, in *MtpDeleteInstanceReqData, opts ...grpc.CallOption) (*MtpReqResult, error) {
	out := new(MtpReqResult)
	err := c.cc.Invoke(ctx, "/mtpgrpc.MtpGrpc/MtpDeleteInstanceReq", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mtpGrpcClient) MtpGetAgentMsgs(ctx context.Context, in *MtpGetAgentMsgsData, opts ...grpc.CallOption) (*MtpReqResult, error) {
	out := new(MtpReqResult)
	err := c.cc.Invoke(ctx, "/mtpgrpc.MtpGrpc/MtpGetAgentMsgs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mtpGrpcClient) MtpGetInfo(ctx context.Context, in *None, opts ...grpc.CallOption) (*MtpInfoData, error) {
	out := new(MtpInfoData)
	err := c.cc.Invoke(ctx, "/mtpgrpc.MtpGrpc/MtpGetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mtpGrpcClient) MtpStream(ctx context.Context, in *MtpGetParamReqData, opts ...grpc.CallOption) (MtpGrpc_MtpStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &MtpGrpc_ServiceDesc.Streams[0], "/mtpgrpc.MtpGrpc/MtpStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &mtpGrpcMtpStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MtpGrpc_MtpStreamClient interface {
	Recv() (*MtpReqResult, error)
	grpc.ClientStream
}

type mtpGrpcMtpStreamClient struct {
	grpc.ClientStream
}

func (x *mtpGrpcMtpStreamClient) Recv() (*MtpReqResult, error) {
	m := new(MtpReqResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MtpGrpcServer is the server API for MtpGrpc service.
// All implementations must embed UnimplementedMtpGrpcServer
// for forward compatibility
type MtpGrpcServer interface {
	MtpGetParamReq(context.Context, *MtpGetParamReqData) (*MtpReqResult, error)
	MtpSetParamReq(context.Context, *MtpSetParamReqData) (*MtpSetParamResData, error)
	MtpGetInstancesReq(context.Context, *MtpGetInstancesReqData) (*MtpReqResult, error)
	MtpAddInstanceReq(context.Context, *MtpAddInstanceReqData) (*MtpAddInstanceResData, error)
	MtpOperateReq(context.Context, *MtpOperateReqData) (*MtpOperateResData, error)
	MtpGetDatamodelReq(context.Context, *MtpGetDatamodelReqData) (*MtpReqResult, error)
	MtpDeleteInstanceReq(context.Context, *MtpDeleteInstanceReqData) (*MtpReqResult, error)
	MtpGetAgentMsgs(context.Context, *MtpGetAgentMsgsData) (*MtpReqResult, error)
	MtpGetInfo(context.Context, *None) (*MtpInfoData, error)
	MtpStream(*MtpGetParamReqData, MtpGrpc_MtpStreamServer) error
	mustEmbedUnimplementedMtpGrpcServer()
}

// UnimplementedMtpGrpcServer must be embedded to have forward compatible implementations.
type UnimplementedMtpGrpcServer struct {
}

func (UnimplementedMtpGrpcServer) MtpGetParamReq(context.Context, *MtpGetParamReqData) (*MtpReqResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MtpGetParamReq not implemented")
}
func (UnimplementedMtpGrpcServer) MtpSetParamReq(context.Context, *MtpSetParamReqData) (*MtpSetParamResData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MtpSetParamReq not implemented")
}
func (UnimplementedMtpGrpcServer) MtpGetInstancesReq(context.Context, *MtpGetInstancesReqData) (*MtpReqResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MtpGetInstancesReq not implemented")
}
func (UnimplementedMtpGrpcServer) MtpAddInstanceReq(context.Context, *MtpAddInstanceReqData) (*MtpAddInstanceResData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MtpAddInstanceReq not implemented")
}
func (UnimplementedMtpGrpcServer) MtpOperateReq(context.Context, *MtpOperateReqData) (*MtpOperateResData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MtpOperateReq not implemented")
}
func (UnimplementedMtpGrpcServer) MtpGetDatamodelReq(context.Context, *MtpGetDatamodelReqData) (*MtpReqResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MtpGetDatamodelReq not implemented")
}
func (UnimplementedMtpGrpcServer) MtpDeleteInstanceReq(context.Context, *MtpDeleteInstanceReqData) (*MtpReqResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MtpDeleteInstanceReq not implemented")
}
func (UnimplementedMtpGrpcServer) MtpGetAgentMsgs(context.Context, *MtpGetAgentMsgsData) (*MtpReqResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MtpGetAgentMsgs not implemented")
}
func (UnimplementedMtpGrpcServer) MtpGetInfo(context.Context, *None) (*MtpInfoData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MtpGetInfo not implemented")
}
func (UnimplementedMtpGrpcServer) MtpStream(*MtpGetParamReqData, MtpGrpc_MtpStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method MtpStream not implemented")
}
func (UnimplementedMtpGrpcServer) mustEmbedUnimplementedMtpGrpcServer() {}

// UnsafeMtpGrpcServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MtpGrpcServer will
// result in compilation errors.
type UnsafeMtpGrpcServer interface {
	mustEmbedUnimplementedMtpGrpcServer()
}

func RegisterMtpGrpcServer(s grpc.ServiceRegistrar, srv MtpGrpcServer) {
	s.RegisterService(&MtpGrpc_ServiceDesc, srv)
}

func _MtpGrpc_MtpGetParamReq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MtpGetParamReqData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MtpGrpcServer).MtpGetParamReq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtpgrpc.MtpGrpc/MtpGetParamReq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MtpGrpcServer).MtpGetParamReq(ctx, req.(*MtpGetParamReqData))
	}
	return interceptor(ctx, in, info, handler)
}

func _MtpGrpc_MtpSetParamReq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MtpSetParamReqData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MtpGrpcServer).MtpSetParamReq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtpgrpc.MtpGrpc/MtpSetParamReq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MtpGrpcServer).MtpSetParamReq(ctx, req.(*MtpSetParamReqData))
	}
	return interceptor(ctx, in, info, handler)
}

func _MtpGrpc_MtpGetInstancesReq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MtpGetInstancesReqData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MtpGrpcServer).MtpGetInstancesReq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtpgrpc.MtpGrpc/MtpGetInstancesReq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MtpGrpcServer).MtpGetInstancesReq(ctx, req.(*MtpGetInstancesReqData))
	}
	return interceptor(ctx, in, info, handler)
}

func _MtpGrpc_MtpAddInstanceReq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MtpAddInstanceReqData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MtpGrpcServer).MtpAddInstanceReq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtpgrpc.MtpGrpc/MtpAddInstanceReq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MtpGrpcServer).MtpAddInstanceReq(ctx, req.(*MtpAddInstanceReqData))
	}
	return interceptor(ctx, in, info, handler)
}

func _MtpGrpc_MtpOperateReq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MtpOperateReqData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MtpGrpcServer).MtpOperateReq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtpgrpc.MtpGrpc/MtpOperateReq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MtpGrpcServer).MtpOperateReq(ctx, req.(*MtpOperateReqData))
	}
	return interceptor(ctx, in, info, handler)
}

func _MtpGrpc_MtpGetDatamodelReq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MtpGetDatamodelReqData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MtpGrpcServer).MtpGetDatamodelReq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtpgrpc.MtpGrpc/MtpGetDatamodelReq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MtpGrpcServer).MtpGetDatamodelReq(ctx, req.(*MtpGetDatamodelReqData))
	}
	return interceptor(ctx, in, info, handler)
}

func _MtpGrpc_MtpDeleteInstanceReq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MtpDeleteInstanceReqData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MtpGrpcServer).MtpDeleteInstanceReq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtpgrpc.MtpGrpc/MtpDeleteInstanceReq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MtpGrpcServer).MtpDeleteInstanceReq(ctx, req.(*MtpDeleteInstanceReqData))
	}
	return interceptor(ctx, in, info, handler)
}

func _MtpGrpc_MtpGetAgentMsgs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MtpGetAgentMsgsData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MtpGrpcServer).MtpGetAgentMsgs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtpgrpc.MtpGrpc/MtpGetAgentMsgs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MtpGrpcServer).MtpGetAgentMsgs(ctx, req.(*MtpGetAgentMsgsData))
	}
	return interceptor(ctx, in, info, handler)
}

func _MtpGrpc_MtpGetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(None)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MtpGrpcServer).MtpGetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtpgrpc.MtpGrpc/MtpGetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MtpGrpcServer).MtpGetInfo(ctx, req.(*None))
	}
	return interceptor(ctx, in, info, handler)
}

func _MtpGrpc_MtpStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MtpGetParamReqData)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MtpGrpcServer).MtpStream(m, &mtpGrpcMtpStreamServer{stream})
}

type MtpGrpc_MtpStreamServer interface {
	Send(*MtpReqResult) error
	grpc.ServerStream
}

type mtpGrpcMtpStreamServer struct {
	grpc.ServerStream
}

func (x *mtpGrpcMtpStreamServer) Send(m *MtpReqResult) error {
	return x.ServerStream.SendMsg(m)
}

// MtpGrpc_ServiceDesc is the grpc.ServiceDesc for MtpGrpc service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MtpGrpc_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "mtpgrpc.MtpGrpc",
	HandlerType: (*MtpGrpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MtpGetParamReq",
			Handler:    _MtpGrpc_MtpGetParamReq_Handler,
		},
		{
			MethodName: "MtpSetParamReq",
			Handler:    _MtpGrpc_MtpSetParamReq_Handler,
		},
		{
			MethodName: "MtpGetInstancesReq",
			Handler:    _MtpGrpc_MtpGetInstancesReq_Handler,
		},
		{
			MethodName: "MtpAddInstanceReq",
			Handler:    _MtpGrpc_MtpAddInstanceReq_Handler,
		},
		{
			MethodName: "MtpOperateReq",
			Handler:    _MtpGrpc_MtpOperateReq_Handler,
		},
		{
			MethodName: "MtpGetDatamodelReq",
			Handler:    _MtpGrpc_MtpGetDatamodelReq_Handler,
		},
		{
			MethodName: "MtpDeleteInstanceReq",
			Handler:    _MtpGrpc_MtpDeleteInstanceReq_Handler,
		},
		{
			MethodName: "MtpGetAgentMsgs",
			Handler:    _MtpGrpc_MtpGetAgentMsgs_Handler,
		},
		{
			MethodName: "MtpGetInfo",
			Handler:    _MtpGrpc_MtpGetInfo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MtpStream",
			Handler:       _MtpGrpc_MtpStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "mtpgrpc.proto",
}
